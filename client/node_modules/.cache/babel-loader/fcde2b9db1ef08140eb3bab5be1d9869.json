{"ast":null,"code":"var _jsxFileName = \"/run/media/droid4x/DATA/Projects/ToDoList/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// eslint-disable-next-line\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState('');\n  const [updateItemText, setUpdateItemText] = useState(''); //add new todo item to database\n\n  const addItem = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await axios.post('http://localhost:5500/api/item', {\n        item: itemText\n      });\n      setListItems(prev => [...prev, res.data]);\n      setItemText('');\n    } catch (err) {\n      console.log(err);\n    }\n  }; //Create function to fetch all todo items from database -- we will use useEffect hook\n\n\n  useEffect(() => {\n    const getItemsList = async () => {\n      try {\n        const res = await axios.get('http://localhost:5500/api/items');\n        setListItems(res.data);\n        console.log('render');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getItemsList();\n  }, []); // Delete item when click on delete\n\n  const deleteItem = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5500/api/item/${id}`);\n      const newListItems = listItems.filter(item => item._id !== id);\n      setListItems(newListItems);\n    } catch (err) {\n      console.log(err);\n    }\n  }; //Update item\n\n\n  const updateItem = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await axios.put(`http://localhost:5500/api/item/${isUpdating}`, {\n        item: updateItemText\n      });\n      console.log(res.data);\n      const updatedItemIndex = listItems.findIndex(item => item._id === isUpdating);\n      const updatedItem = listItems[updatedItemIndex].item = updateItemText;\n      setUpdateItemText('');\n      setIsUpdating('');\n    } catch (err) {\n      console.log(err);\n    }\n  }; //before updating item we need to show input field where we will create our updated item\n\n\n  const renderUpdateForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"update-form\",\n    onSubmit: e => {\n      updateItem(e);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"update-new-input\",\n      type: \"text\",\n      placeholder: \"New Item\",\n      onChange: e => {\n        setUpdateItemText(e.target.value);\n      },\n      value: updateItemText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"update-new-btn\",\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => addItem(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Todo Item\",\n        onChange: e => {\n          setItemText(e.target.value);\n        },\n        value: itemText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-listItems\",\n      children: listItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: isUpdating === item._id ? renderUpdateForm() : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-content\",\n            children: item.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-item\",\n            onClick: () => {\n              setIsUpdating(item._id);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-item\",\n            onClick: () => {\n              deleteItem(item._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"p195Y5dS6FrkpoeQLn31ngASVAg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/run/media/droid4x/DATA/Projects/ToDoList/client/src/App.js"],"names":["useState","useEffect","axios","App","itemText","setItemText","listItems","setListItems","isUpdating","setIsUpdating","updateItemText","setUpdateItemText","addItem","e","preventDefault","res","post","item","prev","data","err","console","log","getItemsList","get","deleteItem","id","delete","newListItems","filter","_id","updateItem","put","updatedItemIndex","findIndex","updatedItem","renderUpdateForm","target","value","map"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState('');\n  const [updateItemText, setUpdateItemText] = useState('');\n\n  //add new todo item to database\n  const addItem = async (e) => {\n    e.preventDefault();\n    try{\n      const res = await axios.post('http://localhost:5500/api/item', {item: itemText})\n      setListItems(prev => [...prev, res.data]);\n      setItemText('');\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Create function to fetch all todo items from database -- we will use useEffect hook\n  useEffect(()=>{\n    const getItemsList = async () => {\n      try{\n        const res = await axios.get('http://localhost:5500/api/items')\n        setListItems(res.data);\n        console.log('render')\n      }catch(err){\n        console.log(err);\n      }\n    }\n    getItemsList()\n  },[]);\n\n  // Delete item when click on delete\n  const deleteItem = async (id) => {\n    try{\n      const res = await axios.delete(`http://localhost:5500/api/item/${id}`)\n      const newListItems = listItems.filter(item=> item._id !== id);\n      setListItems(newListItems);\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Update item\n  const updateItem = async (e) => {\n    e.preventDefault()\n    try{\n      const res = await axios.put(`http://localhost:5500/api/item/${isUpdating}`, {item: updateItemText})\n      console.log(res.data)\n      const updatedItemIndex = listItems.findIndex(item => item._id === isUpdating);\n      const updatedItem = listItems[updatedItemIndex].item = updateItemText;\n      setUpdateItemText('');\n      setIsUpdating('');\n    }catch(err){\n      console.log(err);\n    }\n  }\n  //before updating item we need to show input field where we will create our updated item\n  const renderUpdateForm = () => (\n    <form className=\"update-form\" onSubmit={(e)=>{updateItem(e)}} >\n      <input className=\"update-new-input\" type=\"text\" placeholder=\"New Item\" onChange={e=>{setUpdateItemText(e.target.value)}} value={updateItemText} />\n      <button className=\"update-new-btn\" type=\"submit\">Update</button>\n    </form>\n  )\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <form className=\"form\" onSubmit={e => addItem(e)}>\n        <input type=\"text\" placeholder='Add Todo Item' onChange={e => {setItemText(e.target.value)} } value={itemText} />\n        <button type=\"submit\">Add</button>\n      </form>\n      <div className=\"todo-listItems\">\n        {\n          listItems.map(item => (\n          <div className=\"todo-item\">\n            {\n              isUpdating === item._id\n              ? renderUpdateForm()\n              : <>\n                  <p className=\"item-content\">{item.item}</p>\n                  <button className=\"update-item\" onClick={()=>{setIsUpdating(item._id)}}>Update</button>\n                  <button className=\"delete-item\" onClick={()=>{deleteItem(item._id)}}>Delete</button>\n                </>\n            }\n          </div>\n          ))\n        }\n        \n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}